package uk.co.nikodem.DFJavaResourcesPlus;

import net.kyori.adventure.text.Component;
import team.unnamed.creative.ResourcePack;
import team.unnamed.creative.base.Writable;
import team.unnamed.creative.metadata.pack.PackFormat;
import team.unnamed.creative.metadata.pack.PackMeta;
import team.unnamed.creative.model.*;
import team.unnamed.creative.serialize.minecraft.MinecraftResourcePackWriter;
import uk.co.nikodem.DFJavaResourcesPlus.AssetSearchers.*;
import uk.co.nikodem.DFJavaResourcesPlus.Utils.Logger;

import java.io.File;
import java.util.List;

public class Main {
    public static String NAMESPACE = "dfjr";
    public static String MINECRAFT = "minecraft";

    public static String OUTPUT_FILENAME = "dfjavaresourcesplus.zip";

    public static int MIN_PACK_FORMAT = 64;
    public static int MAX_PACK_FORMAT = 69;
    public static String DESCRIPTION = "DFJavaResourcesPlus 1.21.7+ (Autogenerated)";

    public static Logger logger = new Logger();

    public static void main(String[] args) {
        logger.log("Main", "Starting resource pack compilation...");
        ResourcePack resourcePack = ResourcePack.resourcePack();

        List<AssetSearcher> assetSearchers = List.of(
                new ToolSearcher(),
                new BasicItemSearcher(),
                new ArmourSearcher(),

                // hardcoded values
                new EmojiSearcher(),
                new MusicDiscSearcher(),

                // hardcoded searchers
                new ComicallyLargeSearcher(),
                new CompassSearcher()
        );

        for (AssetSearcher assetSearcher : assetSearchers) {
            logger.log("AssetSearchers", "Adding "+assetSearcher.getAssetTypeName()+" assets..");
            assetSearcher.run(resourcePack);
        }

        logger.log("Main", "Adding metadata..");
        resourcePack.packMeta(
                PackMeta.of(
                        PackFormat.format(MIN_PACK_FORMAT, MIN_PACK_FORMAT, MAX_PACK_FORMAT),
                        Component.text(DESCRIPTION)
                )
        );
        resourcePack.icon(Writable.resource(ClassLoader.getSystemClassLoader(), "pack.png"));

        logger.log("Main", "Writing to zip..");
        MinecraftResourcePackWriter.minecraft().writeToZipFile(
                new File(OUTPUT_FILENAME),
                resourcePack
        );

        logger.log("Main", "Resource pack finished compiling!");
    }
}